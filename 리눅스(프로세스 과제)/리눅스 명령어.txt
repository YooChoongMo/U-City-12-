* 명령어 (man 알고싶은 명령어 => man gcc => 명령어 사전 열림!!)

- ls 		: 혀재 디렉토리 파일 목록
- cd 경로	: 파일경로 이동(cd 다운(치고) -> tab 자동 생성-> cd 다운로드/)
- cd ~		: home 디렉토리
- cd .  	: 현재 경로
- cd .. 	: 상위 폴더로 이동
- cd / 		: /부터 시작하면 절대 경로(어디서든 가능)
- vi 파일명	: 파일 오픈(디렉토리에 없으면 생성)
	   => i : 입력모드(커서가 맨 마지막 앞)
	   => a : 입력모드(커서가 맨 마지막)
- esc		: 입력모드 빠져 나오기 
- : 		: 명령모드
	=> :wq  : 저장하고 나오기
	=> :w!  : 저장 안하고 나오기
	=> :q   : 나오기
- mkdir	: 디렉토리 생성
- cat	: 파일 실행시키지 않고 그안에 내용물 바로 보게 해줌
- 숫자yy: 줄복사(숫자만큼)
- 숫자dd: 줄삭제(숫자만큼)
- p 	: 붙여넣기
- x	: 한글자 삭제
- u	: 복구

- gcc 	: c파일 컴파일
	: 컴파일 한 오브젝트파일의 이름 정의 x => a. out
- gcc -o hello hello.c	: 컴파일 한 오브젝트파일의 이름 정의(hello)
*gcc 옵션
 -o :오브젝트 파일명 지정
 -I(대문자 아이) : 헤더파일을 검색하는 디렉토리 목록 추가
 -L : 라이브러리를 검색하는 디렉토리 목록 추가
 -l : 라이브러리 파일을 컴파일 시 링크
 -g : 바이너리 파일에 표준 디버깅 정보 포함
 -O(0~3) : 컴파일 코드 최적화
 -static : 정적 라이브러리 링크
 -c : xxx.o 오브젝트 파일을 생성

- su 	: root 계정으로 진입
- cp	: 복사 cp hello.c /home
	:      cp hello.c ./hello2.c (./(현재 폴더)에 경로 뒤 바꿀이름)
- rm	: 삭제 rm hello.c => y 
- mv	: 파일이동(경로를 지정 안하면 이름 바꾸는 용도로) mv hello.c hello2.c
- pwd 	: 현재경로 확인
- ps 	: 현재 실행중인 프로세스 목록
- fork(): 현재 프로세스를 복사해서 자식을 만듬
- exit(): 프로세스 종료=> 헤더 stdlib.h 추가!

- vi ~/.bash_profile   =>  경로설정!! (/root 는  ~ 디렉토리 의미)
- source ~/.bash_profile  => update 개념

- tar   : 압축해제해는것






프로세스 3개 생성
부모
자식 대문자
자식 소문자
자식 숫자

부모는 자식들 끝날때 까지 모두 기다리고
끝날때 마다 누가 끝낫는지 알려주기 
