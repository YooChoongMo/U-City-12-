Register GPIO<31:0>

==> 0번 bit 부터 31번 bit까지 

* 레지스터 한 개당 4바이트 => 32bit

- 특정 bit셋팅
 <클리어>		==> 0으로 셋팅
 GPLRO &= ~(1<<2);
 <셋팅>
 GPLRO |= ~(1<<2);

* GPLR (GPIO Level Register)
GPIO핀이 입력모드일 때 GPIO핀의 현재 입력 상태값(0 혹은 1)을 표시한다(현재값 읽어가는 것)

============================================================
ex) GPIO 5번 핀이 눌렸나 안눌렸나 확인하는 코드

(GPLR >> 5) & 1  ==> 1 이면 현재 상태 ( 1 )
(GPLR >> 5) & 1  ==> 0 이면 현재 상태 ( 0 )
============================================================


* GPDR (GPIO Direction Register) =========  
   
 < device.c => open 함수에 GPDR(입력 or 출력) 설정해준다. >

GPIO핀을 입력방향으로 할 것인지 출력방향으로 할 것인지를 결정 한다. 해당
필드가 1이면 출력이고 0이면 입력이다.(LED 출력 => 1로 셋팅)




==GPIO핀의 출력 셋팅==========

 < device.c => write 함수에서 셋팅 해줄 수 있다. >

* GPSR (GPIO Set Register)
- 1로 셋팅하는 레지스터

* GPCR (GPIO Clear Register) => 얘를 1로 하면 그 핀은 0이 되는것!!
- 0으로 셋팅하는 레지스터

==========================================================================================

LCD제어 => Frame buffer 이용

가로세로 해상도 검색하는 코드


ioctl() => 파일 컨트롤 하는 함수 
파라미터 => 1.fd , 2.명령어, 3. 정보를 저장할 구조체 변수 

==> 컴파일은
#arm-linux-gcc -I /root/PXA255-pro/Kernel/linux-2.4.19-pro3_usb20/include newcall_app.c -o newcall_app
	       아이

640 X 480
bpp : 16bit -> 픽셀당 16비트로 표현
length of frame memory : 614400