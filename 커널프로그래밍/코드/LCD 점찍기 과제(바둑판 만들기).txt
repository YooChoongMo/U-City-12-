 #include <stdio.h>
  #include <stdlib.h> /* for exit */
  #include <unistd.h> /* for open/close .. */
  #include <fcntl.h> /* for O_RDONLY */
  #include <sys/ioctl.h> /* for ioctl */
  #include <sys/types.h>
  #include <linux/fb.h> /* for fb_var_screeninfo, FBIOGET_VSCREENINFO */

  #define FBDEVFILE "/dev/fb"

  typedef unsigned char ubyte;

  unsigned short makepixel(ubyte r, ubyte g, ubyte b)
  {
  return (unsigned short)(((r>>3)<<11)|((g>>2)<<5)|(b>>3));
  }

 //480X640
 //칸당 80X80

  int main()
  {
  int fbfd;
  int ret;
  struct fb_var_screeninfo fbvar;
  unsigned short pixel;
  int offset;
  int i, j;

  fbfd = open(FBDEVFILE, O_RDWR);
  if(fbfd < 0)
  {
  perror("fbdev open");
  exit(1);
  }

  ret = ioctl(fbfd, FBIOGET_VSCREENINFO, &fbvar);
  if(ret < 0)
  {
  perror("fbdev ioctl");
  exit(1);
  }

  if(fbvar.bits_per_pixel != 16)
  {
  fprintf(stderr, "bpp is not 16n");
  exit(1);
  }

 //white background
 /* white pixel @ (100,100) */
 for(i=0; i<680; i++){
   for(j=0; j<480; j++){                                                 //세로부터
        offset = j*fbvar.xres*(16/8)+i*(16/8);  //세로+가로
   if(lseek(fbfd, offset, SEEK_SET) < 0)
         {
      perror("fbdev lseek");
      exit(1);
         }
    pixel = makepixel(255,255,255); /* white pixel */
    write(fbfd, &pixel, 2); /* write 2byte(16bit) */
     }
 }


  /* blue pixel @ (50,100) */
 //세로줄 그리기
for(i=1; i<8; i++){
   for(j=1; j<480; j++){
     offset = j*fbvar.xres*(16/8)+(i*80*(16/8));
     if(lseek(fbfd, offset, SEEK_SET) < 0)
              {
       perror("fbdev lseek");
       exit(1);
               }
     pixel = makepixel(0,0,255); /* blue pixel */
     write(fbfd, &pixel, 2); /* write 2byte(16bit) */
      }
 }
 //가로줄 그리기
for(i=1; i<6; i++){
   for(j=1; j<640; j++){
     offset = i*80*fbvar.xres*(16/8)+(j*(16/8));
     if(lseek(fbfd, offset, SEEK_SET) < 0)
              {
       perror("fbdev lseek");
       exit(1);
               }
     pixel = makepixel(0,0,255); /* blue pixel */
     write(fbfd, &pixel, 2); /* write 2byte(16bit) */
      }
 }


  close(fbfd);
  exit(0);
  return 0;
 }