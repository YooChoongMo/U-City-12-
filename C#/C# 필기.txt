[170412]
1. - bool     : 1Bit, true, flase
   - 정수타입 : sbyte(1Byte, 부호o), byte(1Byte, 부호x)
        short(2Byte, 부호o), ushort(2Byte, 부호 x)
      int(4Byte, 부호o), uint(4Byte, 부호x),
      long(8Byte, 부호o), ulong(8Byte, 부호x)
      char(2Byte) : 유니코드 이기 때문에 2Byte
   - 실수타입 : float(4Byte), 
      double(8Byte),
      decimal(16Byte) : 10진형 값을 저장. float, double보다 더 정밀
   - 나열형   : enum xxx{a = 10, b = 15, c = 20}
   - 참조형   : string, 사용자 정의 등..
   cf) C#에서 객체 Type 변수는 기본적으로 object class를 상속받는다.
   cf) int a = 10; object b = a; // 기본타입 객체로 Auto Boxing, Unboxing이 이뤄진다.
      /* 
       * bool    => System.Boolean
       * sbyte   => System.Sbyte
       * byte    => System.Byte
       * short   => System.Int16
       * ushort  => System.UInt16
       * int     => System.Int32
       * uint    => System.UInt32
       * long    => System.Int64
       * ulong   => System.UInt64
       * char      => System.Char
       * float   => System.Single
       * double  => System.Double
        * decimal => System.Decimal
       */

2. 클래스 : 데이터 타입 사용자 정의
   - 1) 멤버 변수
     2) 메서드(멤버 함수)
   - private, public, protected(상속관계)
   - class Test
     {
        private int a;
        private int b;

        public void func1()
   {
      ;
   }
     }

3. C#에서 객체를 전달하는 경우에는 Call by value처럼 보여지지만, 
   실제로는 Call by Reference로 전달 된다.

===============================================================================
using System;
using System.Collections.Generic;
using System.Text;

namespace Classwork_170412
{
    /*  
        class A
        {
            public int age;
            public string name;
        }

        class Program
        {
            static void Main(string[] args)
            {
                int a = 10;
                object b = a + 1;
                int c = (int)b + 1;
                Console.WriteLine("a={0}, b={1}, c={2}", a, b, c);
                //Console.WriteLine("a={0}, b={2}, c={1}", a, c, b);
            
                A a2 = new A();
                a2.age = 12;
                a2.name = "aaa";
                b = a2;
                Console.WriteLine("a2={0}({1}), a2.name={2}, a2.age={3}", a2, a2.GetHashCode(), a2.name, a2.age);
                Console.WriteLine("b={0}({1}),  b.name={1},  b.age={2}", b, b.GetHashCode(), ((A)b).name, ((A)b).age);
        }
    */

    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    /*
        class Program
        {
            static void Main(string[] args)
            {
                int? a = null; // System.Nullable<int> a
                if (a.HasValue)
                    Console.WriteLine("1. a={0}, a.Value={1}", a, a.Value);
                a = 13;
                if (a.HasValue)
                    Console.WriteLine("2. a={0}, a.Value={1}", a, a.Value);
        }
    */

    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    /*
    class A
    {
        private int[] data;

        public A()
        {
            data = new int[10];
        }

        public A(int[] data)
        {
            this.data = data;
        }

        public void input()
        {
            Console.WriteLine("숫자 {0}개 입력", data.Length);
            for (int index = 0; index < data.Length; index++)
            {
                Console.Write("\t{0} : ", index + 1);
                data[index] = Int32.Parse(Console.ReadLine());
            }
        }

        public void display()
        {
            for (int index = 0; index < data.Length; index++)
            {
                Console.Write("data[{0}] = {1}\t", index + 1, data[index]);
            }
        }
    }

    class Program
    {
        static void Main(string[] args)
        {
            A a = new A();
            int[] x = new int[10]; // b의 data 배열
            A b = new A(x);
            a.input();
            b.input();
            a.display();
            b.display();
            for (int index = 0; index < x.Length; index++)
            {
                Console.Write("x[{0}] = {1}\t", index, x[index]);
            }
        }
    }
    */

    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    /*
    class A
    {
        public void swap1(int x, int y)
        {
            int temp = x;
            x = y;
            y = temp;
        }

        public void swap2(ref int x, ref int y)
        {
            int temp = x;
            x = y;
            y = temp;
        }
    }

    class Program
    {
        static void Main(string[] args)
        {
            A x = new A();
            int a = 10, b = 20;

            x.swap1(a, b);
            Console.WriteLine("After swap1 : a = {0}, b = {1}", a, b);

            x.swap2(ref a, ref b);
            Console.WriteLine("After swap2 : a = {0}, b = {1}", a, b);
        }
    }
    */

    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    /*
    class Test
    {
        private string name;
        private int age;

        public Test(string name, int age)
        {
            this.name = name;
            this.age = age;
        }

        public Test(Test a)
        {
            this.name = a.name;
            this.age = a.age;
        }

        public override string ToString()
        {
            return ("name : " + this.name + ", age : " + this.age);
        }
    }

    class Program
    {
        static void Main(string[] args)
        {
            Test t1 = new Test("aaa", 111);
            Test t2 = new Test(t1);

            Console.WriteLine("t1 = {0}", t1);
            Console.WriteLine("t2 = {0}", t2);
        }
    }
    */
    
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    class Point
    {
        private int x;
        private int y;

        public Point() { }
        public Point(int x, int y)
        {
            this.x = x;
            this.y = y;
        }

        public void setX(int x)
        {
            this.x = x;
        }

        public int getX()
        {
            return this.x;
        }

        public void setY(int y)
        {
            this.y = y;
        }

        public int getY()
        {
            return this.y;
        }
    }

    class Circle
    {
        private Point p;    // 포함(Has A) 관계
        private int r;

        public Circle()
        {
            p = new Point(1, 2);
            r = 10;
        }

        public Circle(Point p, int r)
        {
            this.p = p;
            this.r = r;
        }

        public void print()
        {
            Console.WriteLine("중심 : ({0}, {1}), 반지름 {2}", p.getX(), p.getY(), r);
        }
    }

    class Program
    {
        static void Main(string[] args)
        {
            Circle c1 = new Circle();
            Circle c2 = new Circle(new Point(100, 200), 100);

            c1.print();
            c2.print();
        }
    }
}

=======================================================
